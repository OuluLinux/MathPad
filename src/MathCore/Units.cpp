#include "MathCore.h"

namespace MathCore {
	
// International System of Units
Node TypeMetre		= id("m");
Node TypeKilogram	= id("kg");
Node TypeSecond		= id("s");
Node TypeAmpere		= id("A");
Node TypeKelvin		= id("K");
Node TypeMole		= id("mol");
Node TypeCandela		= id("cd");
Node TypeRadian		= id("rad");
Node TypeSteradian	= id("sr");
Node TypeHertz		= id("Hz");
Node TypeNewton		= id("N");
Node TypePascal		= id("Pa");
Node TypeJoule		= id("J");
Node TypeWatt		= id("W");
Node TypeCoulomb		= id("C");
Node TypeVolt		= id("V");
Node TypeFarad		= id("F");
Node TypeOhm			= id("Î©");
Node TypeSiemens		= id("S");
Node TypeWeber		= id("Wb");
Node TypeTesla		= id("T");
Node TypeHenry		= id("H");
Node TypeLumen		= id("lm");
Node TypeLux			= id("lx");
Node TypeBecquerel	= id("Bq");
Node TypeGray		= id("Gy");
Node TypeSievert		= id("Sv");
Node TypeKatal		= id("kat");


// Derived units
Node TypeArea					= TypeMetre ^2;
Node TypeVolume					= TypeMetre ^3;
Node TypeMomentOfInertia			= TypeKilogram * TypeArea;
Node TypeDensity					= TypeKilogram / TypeVolume;
Node TypeLinearVelocity			= TypeMetre / TypeSecond;
Node TypeAngularVelocity			= TypeRadian / TypeSecond;
Node TypeLinearMomentum			= TypeKilogram * TypeMetre / TypeSecond;
Node TypeAngularMomentum			= TypeKilogram * TypeArea / TypeSecond;
Node TypeLinearAcceleration		= TypeMetre / (TypeSecond^2);
Node TypeAngularAcceleration		= TypeRadian / (TypeSecond^2);
Node TypeForce					= TypeKilogram * TypeMetre / (TypeSecond^2);
Node TypeTorque					= TypeNewton * TypeMetre;
Node TypeImpulse					= TypeNewton * TypeSecond;
Node TypeEnergy					= TypeNewton * TypeMetre;
Node TypeWork					= TypeNewton * TypeMetre;
Node TypePower					= TypeJoule / TypeSecond;
Node TypeDynamicViscosity		= TypePascal * TypeSecond;
Node TypeCharge					= TypeAmpere * TypeSecond;
Node TypeCurrentDensity			= TypeAmpere / TypeArea;
Node TypeVolumeChargeDensity		= TypeCharge / TypeVolume;
Node TypeSurfaceChargeDensity	= TypeCharge / TypeArea;
Node TypeLinearChargeDensity		= TypeCharge / TypeMetre;
Node TypeElectricPotential		= TypeJoule / TypeCharge;
Node TypeElectricField			= TypeNewton / TypeCoulomb;
Node TypeElectricFlux			= TypeVolt / TypeMetre;
Node TypeElectricMoment			= TypeCoulomb * TypeMetre;
Node TypeMagneticField			= TypeNewton / (TypeAmpere * TypeMetre);
Node TypeMagneticFlux			= TypeWeber;
Node TypeMagneticMoment			= TypeAmpere * TypeArea;
Node TypePolarization			= TypeCharge / TypeArea;
Node TypeMagnetization			= TypeArea / TypeMetre;
Node TypeHeatCapacity			= TypeJoule / TypeKelvin;
Node TypeEntropy					= TypeJoule / TypeKelvin;
Node TypeSpecificHeat			= TypeJoule / (TypeKilogram * TypeKelvin);
Node TypeMolarHeat				= TypeJoule / (TypeMole * TypeKelvin);
Node TypeEnergyFlux				= TypeWatt / TypeArea;
Node TypeSurfaceTension			= TypeNewton / TypeMetre;
Node TypeWaveNumber				= 1 / TypeMetre;
Node TypeEnergyDensity			= TypeJoule / TypeVolume;
Node TypeIntensity				= TypeJoule / (TypeArea * TypeSecond);
Node TypeBrightness				= TypeCandela / TypeArea;


// Common symbols
Node IdAcceleration = id("a");
Node IdImpactParameter = id("b");
Node IdSpeedOfSound = id("c");
Node IdSpeedOfLightInVacuum = id("c");
Node IdDistance = id("d");
Node IdEccentricity = id("e");
Node IdFrictionalDrag = id("f");
Node IdAccelerationDueToGravity = id("g");
Node IdPlanckConstant = id("h");
Node IdImaginaryUnit = id("i");
Node IdImpulse = id("j");
Node IdSpringConstant = id("k");
Node IdLength = id("l");
Node IdMass = id("m");
Node IdNumber = id("n");
Node IdMomentum = id("p");
Node IdPressure = id("p");
Node IdDeceleration = id("q");
Node IdCharge = id("q");
Node IdRadius = id("r");
Node IdArcLength = id("s");
Node IdTime = id("t");
Node IdFourVelocity = id("u");
Node IdVelocity = id("v");
Node IdSpeed = id("v");
Node IdWeight = id("w");
Node IdPosition = id("x");
Node IdRedShift = id("z");
Node IdArea = id("A");
Node IdAtomicMass = id("A");
Node IdMagneticFluxDensity = id("B");
Node IdCapacitance = id("C");
Node IdElectricDisplacement = id("D");
Node IdEnergy = id("E");
Node IdForce = id("F");
Node IdUniversalConstantOfGravitation = id("G");
Node IdMagneticFieldStrength = id("H");
Node IdAction = id("I");
Node IdIntensity = id("I");
Node IdMomentOfInertia = id("I");
Node IdElectricCurrent = id("I");
Node IdCurrentDensity = id("J");
Node IdKineticEnergy = id("K");
Node IdInductance = id("L");
Node IdLuminosity = id("L");
Node IdMagnetization = id("M");
Node IdMoment = id("M");
Node IdNormalVector = id("N");
Node IdAtomicNumber = id("N");
Node IdPower = id("P");
Node IdPolarization = id("P");
Node IdHeat = id("Q");
Node IdResistance = id("R");
Node IdRadiancy = id("R");
Node IdPoyntingVector = id("S");
Node IdTemperature = id("T");
Node IdTangentialVector = id("T");
Node IdPotentialEnergy = id("U");
Node IdVoltage = id("V");
Node IdPotential = id("V");
Node IdHydrogenRatio = id("X");
Node IdHeliumRatio = id("Y");
Node IdMetalsRatio = id("Z");
Node IdImpedance = id("Z");
Node IdProtonNumber = id("Z");
Node IdAngularAcceleration = id("alpha");
Node IdVelocityInTermsOfC = id("beta");
Node IdEinsteinFactor = id("gamma");
Node IdChange = id("delta");
Node IdElectricConstant = id("epsilon");
Node IdEfficiency = id("eta");
Node IdAngularDisplacement = id("theta");
Node IdTorsionConstant = id("kappa");
Node IdPropertLength = id("lambda");
Node IdWavelength = id("lambda");
Node IdMagneticConstant = id("mu");
Node IdProperMass = id("mu");
Node IdFrequency = id("nu");
Node IdCircumferenceToDiameterRatio = id("pi");
Node IdParallax = id("pi");
Node IdDensity = id("rho");
Node IdStefanBolzmannConstant = id("sigma");
Node IdSurfaceChargeDensity = id("sigma");
Node IdTorque = id("tau");
Node IdProperTime = id("tau");
Node IdSusceptibility = id("khi");
Node IdAngularVelocity = id("omega");
Node IdGammaFunction = id("gamma");
Node IdStepFunction = id("theta");
Node IdCosmologicalConstant = id("lambda");
Node IdRepeatedProduct = id("pi");
Node IdRepeatedSum = id("sigma");
Node IdFieldStrength = id("phi");
Node IdWaveFunction = id("psi");
Node IdAngularPrecessionVelocity = id("omega");
Node IdSolidAngle = id("omega");

}

